// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RinhaDeBackend.Data;

#nullable disable

namespace RinhaDeBackend.Migrations
{
    [DbContext(typeof(PaymentContext))]
    [Migration("20250714200935_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RinhaDeBackend.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<Guid>("CorrelationId")
                        .HasColumnType("uuid")
                        .HasColumnName("CorrelationId");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("ErrorMessage");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ProcessedAt");

                    b.Property<string>("ProcessorType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("ProcessorType");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("RequestedAt");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean")
                        .HasColumnName("Success");

                    b.HasKey("Id");

                    b.HasIndex("CorrelationId")
                        .IsUnique()
                        .HasDatabaseName("IX_Payments_CorrelationId");

                    b.HasIndex("ProcessedAt")
                        .HasDatabaseName("IX_Payments_ProcessedAt");

                    b.HasIndex("ProcessorType")
                        .HasDatabaseName("IX_Payments_ProcessorType");

                    b.HasIndex("ProcessorType", "ProcessedAt")
                        .HasDatabaseName("IX_Payments_ProcessorType_ProcessedAt");

                    b.ToTable("Payments", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
